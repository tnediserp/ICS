#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;

Loop:
	iaddq	$-8, %rdx
	jge	Mpos0
	jmp Endpos
Mpos0:
	mrmovq (%rdi), %rcx
	rmmovq %rcx, (%rsi)		# ...and store it to dst
	iaddq	$1, %rax
	mrmovq 8(%rdi), %r8
	rmmovq %r8, 8(%rsi)		# ...and store it to dst
	iaddq	$1, %rax
	mrmovq 16(%rdi), %r9
	rmmovq %r9, 16(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
	mrmovq 24(%rdi), %r10
	rmmovq %r10, 24(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
	mrmovq 32(%rdi), %r11
	rmmovq %r11, 32(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
	mrmovq 40(%rdi), %r12
	rmmovq %r12, 40(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
	mrmovq 48(%rdi), %r13
	rmmovq %r13, 48(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
	mrmovq 56(%rdi), %r14
	rmmovq %r14, 56(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
Npos8:
	iaddq $64, %rdi
	iaddq $64, %rsi
	jmp	Loop

Endpos:
	rrmovq 	%rax, %rbp #######
	iaddq $7, %rdx
	jge	BinarySearch
	jmp Done
BinarySearch:
	iaddq	$-3, %rdx
	jg	Bpos5
	jl	Bpos1
	jmp	Rpos3
Bpos1:
	iaddq	$2, %rdx
	jg	Rpos2
	jl	Rpos0
	jmp	Rpos1
Bpos5:
	iaddq	$-2, %rdx
	jl	Rpos4
	je	Rpos5
Rpos6:
	mrmovq 48(%rdi), %r13
	rmmovq %r13, 48(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
Rpos5:
	mrmovq 40(%rdi), %r12
	rmmovq %r12, 40(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
Rpos4:
	mrmovq 32(%rdi), %r11
	rmmovq %r11, 32(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
Rpos3:
	mrmovq 24(%rdi), %r10
	rmmovq %r10, 24(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
Rpos2:
	mrmovq 16(%rdi), %r9
	rmmovq %r9, 16(%rsi)	# ...and store it to dst
	iaddq	$1, %rax
Rpos1:
	mrmovq 8(%rdi), %r8
	rmmovq %r8, 8(%rsi)		# ...and store it to dst
	iaddq	$1, %rax
Rpos0:
	mrmovq (%rdi), %rcx
	rmmovq %rcx, (%rsi)	# ...and store it to dst
	iaddq	$1, %rax
	
	rrmovq	%rax, %rbp
	

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
